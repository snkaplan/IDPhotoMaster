[versions]
accompanistVersion = "0.32.0"
activityCompose = "1.9.3"
billingVersion = "7.1.1"
cameraxVersion = "1.4.0"
coilComposeVersion = "2.5.0"
compose = "1.0.0-beta01"
composeBom = "2024.10.01"
composeStateEventsVersion = "2.2.0"
converterGson = "2.9.0"
coreKtx = "1.15.0"
datastorePreferences = "1.1.1"
espressoCore = "3.6.1"
firebaseBomVersion = "33.5.1"
firebaseStorage = "21.0.1"
gpuimageVersion = "2.1.0"
gson = "2.10.1"
hiltAndroid = "2.50"
hiltAndroidCompiler = "2.49"
hiltCommon = "1.2.0"
hiltWork = "1.2.0"
junit = "4.13.2"
junitVersion = "1.2.1"
library = "4.0.0"
libraryNoOp = "4.0.0"
lifecycleRuntimeKtx = "2.8.7"
loggingInterceptor = "4.12.0"
material3Version = "1.3.1"
materialIconsExtended = "1.7.5"
metricsPerformance = "1.0.0-beta01"
navigationCommonKtx = "2.8.3"
navigationCompose = "2.8.3"
okhttp = "4.12.0"
playServicesAuth = "21.2.0"
playServicesMlkitSubjectSegmentationVersion = "16.0.0-beta1"
retrofit = "2.9.0"
workManagerVersion = "2.10.0"
# initialize the versions number of the libraries and plugins

[libraries]
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanistVersion" }
androidx-camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "cameraxVersion" }
androidx-camera-extensions = { module = "androidx.camera:camera-extensions", version.ref = "cameraxVersion" }
androidx-camera-view = { module = "androidx.camera:camera-view", version.ref = "cameraxVersion" }
androidx-camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "cameraxVersion" }
androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCore" }
androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltCommon" }
androidx-hilt-work = { module = "androidx.hilt:hilt-work", version.ref = "hiltWork" }
androidx-hilt-common = { module = "androidx.hilt:hilt-common", version.ref = "hiltCommon" }
androidx-hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hiltCommon" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "junitVersion" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycleRuntimeKtx" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "materialIconsExtended" }
androidx-material3 = { module = "androidx.compose.material3:material3" }
androidx-metrics-performance = { module = "androidx.metrics:metrics-performance", version.ref = "metricsPerformance" }
androidx-navigation-common-ktx = { module = "androidx.navigation:navigation-common-ktx", version.ref = "navigationCommonKtx" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
androidx-ui-graphics = { module = "androidx.compose.ui:ui-graphics" }
androidx-ui = { module = "androidx.compose.ui:ui" }
androidx-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }
androidx-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
androidx-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
androidx-work-runtime = { module = "androidx.work:work-runtime", version.ref = "workManagerVersion" }
billing-ktx = { module = "com.android.billingclient:billing-ktx", version.ref = "billingVersion" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coilComposeVersion" }
compose-state-events = { module = "com.github.leonard-palm:compose-state-events", version.ref = "composeStateEventsVersion" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "converterGson" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
firebase-auth-ktx = { module = "com.google.firebase:firebase-auth-ktx" }
firebase-config = { module = "com.google.firebase:firebase-config" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics" }
firebase-firestore = { module = "com.google.firebase:firebase-firestore" }
firebase-auth = { module = "com.google.firebase:firebase-auth" }
firebase-storage = { module = "com.google.firebase:firebase-storage", version.ref = "firebaseStorage" }
google-firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBomVersion" }
gpuimage = { module = "jp.co.cyberagent.android:gpuimage", version.ref = "gpuimageVersion" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltAndroid" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hiltAndroidCompiler" }
junit = { module = "junit:junit", version.ref = "junit" }
library-no-op = { module = "com.github.chuckerteam.chucker:library-no-op", version.ref = "libraryNoOp" }
library = { module = "com.github.chuckerteam.chucker:library", version.ref = "library" }
material3 = { module = "androidx.compose.material3:material3", version.ref = "material3Version" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptor" }
play-services-auth = { module = "com.google.android.gms:play-services-auth", version.ref = "playServicesAuth" }
play-services-mlkit-subject-segmentation = { module = "com.google.android.gms:play-services-mlkit-subject-segmentation", version.ref = "playServicesMlkitSubjectSegmentationVersion" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
# initialize the libraries group, name and version number

[plugins]
# initialize the plugins id, and version number